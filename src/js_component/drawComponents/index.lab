

(class BlockLevel
    (constructor (xa)
        (set! (. this "elementInfo") 
            (json 
                (: "w" 0 )
                (: "h" 0 )
            )
        )
        (set! (. this "child") (null))
        (set! (. this "father") (null))
        (set! (. this "bigBrother") (null))
        (set! (. this "brother") (null))
        (set! (. this "layoutInfo") (json 
                (: "x" 0 )
                (: "y" 0 )
                (: "endx" 0 )
                (: "endy" (. this "elementInfo" "h"))
            )
        )
    )
    (define (CountLayoutInfo)
        (define fatherLayoutInfo )
        (define bigBrotherLayoutInfo)
        (if (. this "father")
            (set! fatherLayoutInfo  (. this "father" "layoutInfo"))  
            (set! fatherLayoutInfo  (json 
                    (: "x" 0 )
                    (: "y" 0 )
                    (: "endx" 0 )
                    (: "endy" 0 )
                )
            )  
        )

        (if (. this "bigBrother")
            (set! bigBrotherLayoutInfo  (.  this "bigBrother" "layoutInfo"))  
            (set! bigBrotherLayoutInfo  (json 
                    (: "x" (. fatherLayoutInfo "endx")  )
                    (: "y" (. fatherLayoutInfo "y") )
                    (: "endx" (. fatherLayoutInfo "endx") )
                    (: "endy" (. fatherLayoutInfo "y")  )
                )
            )  
        )

        (set! (. this "layoutInfo") 
            (json 
                    (: "x" (. bigBrotherLayoutInfo "x")  )
                    (: "y" (. bigBrotherLayoutInfo "endy" ) )
                    (: "endx" (. fatherLayoutInfo "x") )
                    (: "endy" (+ (. bigBrotherLayoutInfo "endy")  (.  this "elementInfo" "h" )) )
            )
        
        )
    )

    (define (render)
        ((. this "CountLayoutInfo"))
        ((. this "drawSelf"))
        (if (. this "child")
             ((. this "child" "render"))
        )

        (if (. this "brother")
            ((.  this "brother" "render"))
        )
    )

    (define (drawSelf)
        ((. canvas "rect") 
            (. this "layoutInfo"  "x")
            (. this "layoutInfo"  "y")
            600
            (. this "elementInfo"  "h")
        )
    )
)


(class txtLevel
    (constructor (txt)
        (set! (. this "elementInfo") 
            (json 
                (: "w" 0 )
                (: "h" 0 )
            )
        )
        (set! (. this "content") txt)
        (set! (. this "child") (null))
        (set! (. this "father") (null))
        (set! (. this "bigBrother") (null))
        (set! (. this "brother") (null))
        (set! (. this "layoutInfo") (json 
                (: "x" 0 )
                (: "y" 0 )
                (: "endx" 0 )
                (: "endy" (. this "elementInfo" "h") )
            )
        )
    )
    
    (define (CountLayoutInfo)
        (define fatherLayoutInfo )
        (define bigBrotherLayoutInfo)
        (if (. this "father")
            (set! fatherLayoutInfo  (. this "father" "layoutInfo"))  
            (set! fatherLayoutInfo  (json 
                    (: "x" 0 )
                    (: "y" 0 )
                    (: "endx" 0 )
                    (: "endy" 0 )
                )
            )  
        )

        (if (. this "bigBrother")
            (set! bigBrotherLayoutInfo  (.  this "bigBrother" "layoutInfo"))  
            (set! bigBrotherLayoutInfo  (json 
                    (: "x" (. fatherLayoutInfo "endx" ) )
                    (: "y" (. fatherLayoutInfo "y") )
                    (: "endx" (. fatherLayoutInfo "endx") )
                    (: "endy" (. fatherLayoutInfo "y") )
                )
            )  
        )
       
        (set! (. this "layoutInfo") 
            (json 
                    (: "x" (. bigBrotherLayoutInfo "x") )
                    (: "y" (. bigBrotherLayoutInfo "endy" ))
                    (: "endx" (. fatherLayoutInfo "x" ) )
                    (: "endy" ( + (. bigBrotherLayoutInfo "endy") (.  this "elementInfo" "h")) )
            )
        )
    )

    (define (render)
        ((. this "CountLayoutInfo"))
        ((. this "drawSelf"))
        (if (. this "child")
             ((. this "child" "render"))
        )

        (if (. this "brother")
            ((.  this "brother" "render"))
        )
    )

    (define (drawSelf)
        ((. canvas "fillText") 
            (. this "content")
            (.  this "layoutInfo" "x")
            (.  this "layoutInfo" "y")
        )
    )
)





(define (parseEleInfoTree eleLists father)

    (define result (null))
    (define temp (null))
    (define _thisOne (null))

    ((.  eleLists "forEach") (lambda (element i)
            (define tag (. element "tag"))
            (cond 
                ((= tag  "div") 
                    (set! _thisOne (new BlockLevel "1"))
                    (set!  (. _thisOne "child")  (parseEleInfoTree (. element "child") _thisOne) )
                )
                ((= tag "txt") 
                    (set! _thisOne (new txtLevel (. element "txt")))
                )
            )
            
            (set! (. _thisOne "father") father)

            (if (= i 0)
                (begin 
                    (set! result _thisOne)
                    (set! temp _thisOne)
                )
                (begin 
                    (set! (. temp "brother") _thisOne)
                    (set! (. _thisOne "bigBrother") temp)
                    (set! temp _thisOne)
                )
            )
        )
    )
    result
)
    

(define (parseEleInfo elmentObj)
    (if (. elmentObj "child")
        (parseEleInfo (. elmentObj "child"))
        (begin
            (set! (.  elmentObj "elementInfo"  "w") 500)
            (set! (.  elmentObj "elementInfo"  "h") 24)
        )
    )

    (if (. elmentObj "brother")
        (parseEleInfo (. elmentObj "brother"))
    ) 
    (display (. elmentObj "father"))
    (debugger)
    (if (. elmentObj "father")
        (begin
            (+= (. elmentObj "father" "elementInfo" "w")
                (. elmentObj "elementInfo" "w")
            )
            (+= (. elmentObj "father" "elementInfo" "h" ) 
                (. elmentObj "elementInfo" "h")
            )
            (display "-----------------------")
        )
        (display "-xxxxxxxxxxxxxxxxxxx")
    )
    (display (. elmentObj "father" "elementInfo" "h" ) )
)


(define helloOk (parseEleInfoTree (. body "result") (null)))


 
(parseEleInfo helloOk)
 
((. helloOk "render") 1 )
helloOk





