(display "开始")

(class DrawBase
    (constructor (a)
        (set! (. this "elementInfo") 
            (json 
                (: "w" 0 )
                (: "h" 0 )
            )
        )
        (set! (. this "child") (null))
        (set! (. this "father") (null))
        (set! (. this "bigBrother") (null))
        (set! (. this "brother") (null))
        (set! (. this "layoutInfo") (json 
                (: "x" 0 )
                (: "y" 0 )
                (: "endX" 0 )
                (: "endY" 0 )
            )
        )
    )
    (define (CountLayoutInfo)
        (define fatherLayoutInfo )
        (define bigBrotherLayoutInfo)
        (if (. this "father")
            (set! fatherLayoutInfo  (. this "layoutInfo"))  
            (set! fatherLayoutInfo  (json 
                    (: "x" 0 )
                    (: "y" 0 )
                    (: "endx" 0 )
                    (: "endy" 0 )
                )
            )  
        )

        (if (. this "bigBrother")
            (set! bigBrotherLayoutInfo  (. (. this "bigBrother") "layoutInfo"))  
            (set! bigBrotherLayoutInfo  (json 
                    (: "x" (. fatherLayoutInfo "endx") )
                    (: "y" (. fatherLayoutInfo "y") )
                    (: "endx" (. fatherLayoutInfo "endx") )
                    (: "endy" (. fatherLayoutInfo "y") )
                )
            )  
        )

        (set! (. this "layoutInfo") 
            (json 
                    (: "x" (. bigBrotherLayoutInfo "x") )
                    (: "y" (. bigBrotherLayoutInfo "endy") )
                    (: "endx" (. fatherLayoutInfo "x") )
                    (: "endy" (+ (. bigBrotherLayoutInfo "endy") (. (. this "elementInfo") "h")) )
            )
        
        )
    )

    (define (render)
        ((. this "CountLayoutInfo"))
        ((. this "drawSelf"))
        (if (. this "child")
            ((. (. this "child") "render"))
        )

        (if (. this "brother")
            ((. (. this "brother") "render"))
        )
    
    )

)


(class BlockLevel
    (constructor (b) 
        (+ 1 1)
    )
    (display "0---")
)

(class lineLevel
    (constructor (v) 
        (+ 1 1)
    )
    (display "0---")
)



(class txtLevel
    (constructor (d) 
        (+ 1 1)
    )
    (display "0---")
)



(define (parseEleInfoTree eleLists father)

    (define result (null))
    (define temp (null))
    (define _thisOne (null))

    ((.  eleLists "forEach") (lambda (element i)
            (define tag ((. element "get") "tag" ))
            (cond 
                ((= tag "div") 
                    (set! _thisOne (DrawBase "1"))
                    (set!  (. _thisOne "child")  (parseEleInfoTree ((. element "get") "child") _thisOne) )
                )
                ((= tag "txt") 
                    (set! _thisOne (DrawBase "1"))
                )
            )
            (if (= i 0)
                (begin 
                    (set! result _thisOne)
                  
                    (set! temp _thisOne)
                )
                (begin 
                    (set! (. temp "brother") _thisOne)
                    (set! (. _thisOne "bigBrother") temp)
                    (set! temp _thisOne)
                )
            )
        )
    )
    (display "------------------------")
    (display result)
    result
)
    

(define (parseEleInfo elmentObj)
    (display "hhhhhhhhhhhhhhhhhh")
    (if (. elmentObj "child")
        (parseEleInfo (. elmentObj "child"))
        (begin
            (set! (. (. elmentObj "elementInfo") "w") 10)
            (set! (. (. elmentObj "elementInfo") "h") 20)
        )
    )

    (if (. elmentObj "brother")
        (parseEleInfo (. elmentObj "brother"))
    )


     (if (. elmentObj "father")
         (begin
            (set! (. (. (. elmentObj "father") "elementInfo") "w")  (. (. elmentObj "elementInfo") "w"))
            (set! (. (. (. elmentObj "father") "elementInfo") "h")  (. (. elmentObj "elementInfo") "h"))
         )
    )
    (display "????????????")
)



(define helloOk (parseEleInfoTree (. body "result") (null)))
(display "看结果--parseEleInfo")
 (display "看结果--parseEleInfo")
(parseEleInfo helloOk)
 (display "看结果")
helloOk







